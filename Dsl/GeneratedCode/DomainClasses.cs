//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass TapizDiagramaClases
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("94ad32b2-222e-4e42-a5de-0235d23cdf5a")]
	public partial class TapizDiagramaClases : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizDiagramaClases domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x94ad32b2, 0x222e, 0x4e42, 0xa5, 0xde, 0x02, 0x35, 0xd2, 0x3c, 0xdf, 0x5a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizDiagramaClases(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizDiagramaClases(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region solucionDiagramaClases domain property code
		
		/// <summary>
		/// solucionDiagramaClases domain property Id.
		/// </summary>
		public static readonly global::System.Guid solucionDiagramaClasesDomainPropertyId = new global::System.Guid(0x793df824, 0xfdab, 0x4d04, 0xa1, 0x8c, 0x8c, 0x14, 0x4b, 0x6a, 0x3c, 0x7c);
		
		/// <summary>
		/// Storage for solucionDiagramaClases
		/// </summary>
		private global::System.String solucionDiagramaClasesPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of solucionDiagramaClases domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases.Solucion
		/// Diagrama Clases
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases/solucionDiagramaClases.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases/solucionDiagramaClases.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("793df824-fdab-4d04-a18c-8c144b6a3c7c")]
		public global::System.String solucionDiagramaClases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return solucionDiagramaClasesPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				solucionDiagramaClasesPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizDiagramaClases.solucionDiagramaClases domain property.
		/// </summary>
		internal sealed partial class solucionDiagramaClasesPropertyHandler : DslModeling::DomainPropertyValueHandler<TapizDiagramaClases, global::System.String>
		{
			private solucionDiagramaClasesPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizDiagramaClases.solucionDiagramaClases domain property value handler.
			/// </summary>
			public static readonly solucionDiagramaClasesPropertyHandler Instance = new solucionDiagramaClasesPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizDiagramaClases.solucionDiagramaClases domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return solucionDiagramaClasesDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizDiagramaClases element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.solucionDiagramaClasesPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizDiagramaClases element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.solucionDiagramaClasesPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clases opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Clases.
		/// Description for
		/// UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.TapizDiagramaClases
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> Clases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.TapizDiagramaClasesDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Create link for path TapizDiagramaClasesHasClases.Clases
				this.Clases.Add(sourceClase1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase sourceClase1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase;
			if (sourceClase1 != null)
			{
				// Delete link for path TapizDiagramaClasesHasClases.Clases
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.GetLinks((global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClases)this, sourceClase1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.TapizDiagramaClasesDomainRoleId, global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.ClaseDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass Clase
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Clase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e06c30db-a6b2-4823-91e6-069b58a15b1c")]
	public partial class Clase : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Clase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe06c30db, 0xa6b2, 0x4823, 0x91, 0xe6, 0x06, 0x9b, 0x58, 0xa1, 0x5b, 0x1c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Clase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreClase domain property code
		
		/// <summary>
		/// NombreClase domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreClaseDomainPropertyId = new global::System.Guid(0x4e9eea82, 0xc15d, 0x49fe, 0xbe, 0x56, 0xaf, 0xf3, 0x2e, 0xa9, 0xa2, 0xdc);
		
		/// <summary>
		/// Storage for NombreClase
		/// </summary>
		private global::System.String nombreClasePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of NombreClase domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Clase.Nombre Clase
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase/NombreClase.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase/NombreClase.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("4e9eea82-c15d-49fe-be56-aff32ea9a2dc")]
		public global::System.String NombreClase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombreClasePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombreClasePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Clase.NombreClase domain property.
		/// </summary>
		internal sealed partial class NombreClasePropertyHandler : DslModeling::DomainPropertyValueHandler<Clase, global::System.String>
		{
			private NombreClasePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.NombreClase domain property value handler.
			/// </summary>
			public static readonly NombreClasePropertyHandler Instance = new NombreClasePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.NombreClase domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreClaseDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombreClasePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Clase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombreClasePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreCompleto domain property code
		
		/// <summary>
		/// NombreCompleto domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreCompletoDomainPropertyId = new global::System.Guid(0xe85feefd, 0x6be2, 0x4580, 0x88, 0xe3, 0x35, 0xc0, 0x05, 0x6d, 0xaf, 0x26);
		
		/// <summary>
		/// Gets or sets the value of NombreCompleto domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Clase.Nombre Completo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase/NombreCompleto.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Clase/NombreCompleto.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("e85feefd-6be2-4580-88e3-35c0056daf26")]
		public global::System.String NombreCompleto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NombreCompletoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Clase.NombreCompleto domain property.
		/// </summary>
		internal sealed partial class NombreCompletoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Clase, global::System.String>
		{
			private NombreCompletoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Clase.NombreCompleto domain property value handler.
			/// </summary>
			public static readonly NombreCompletoPropertyHandler Instance = new NombreCompletoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Clase.NombreCompleto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreCompletoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Clase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NombreCompleto because its Kind is
				// set to Calculated. Please provide the GetNombreCompletoValue()
				// method on the domain class.
				return element.GetNombreCompletoValue();
			}
		
		}
		
		#endregion
		#region TapizDiagramaClases opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizDiagramaClases.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.Clase
		/// </summary>
		public virtual TapizDiagramaClases TapizDiagramaClases
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.ClaseDomainRoleId) as TapizDiagramaClases;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.TapizDiagramaClasesHasClases.ClaseDomainRoleId, value);
			}
		}
		#endregion
		#region Atributo opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Atributo.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Atributo> Atributo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Atributo>, Atributo>(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId);
			}
		}
		#endregion
		#region Operaciones opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Operaciones.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.Clase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Operacion> Operaciones
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Operacion>, Operacion>(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.ClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAsociante opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAsociante.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Asociacion.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAsociante
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.Asociacion.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAsociada opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAsociada.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Asociacion.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAsociada
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.Asociacion.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAgreganteFuerte opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAgreganteFuerte.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionFuerte.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAgreganteFuerte
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionFuerte.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAgregadaFuerte opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAgregadaFuerte.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionFuerte.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAgregadaFuerte
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionFuerte.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAgreganteDebil opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAgreganteDebil.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionDebil.SourceClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAgreganteDebil
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionDebil.SourceClaseDomainRoleId);
			}
		}
		#endregion
		#region ClaseAgregadaDebil opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseAgregadaDebil.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionDebil.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseAgregadaDebil
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.AgregacionDebil.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ClasePadre opposite domain role accessor
		/// <summary>
		/// Gets or sets ClasePadre.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Herencia.SourceClase
		/// </summary>
		public virtual Clase ClasePadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.Herencia.SourceClaseDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.Herencia.SourceClaseDomainRoleId, value);
			}
		}
		#endregion
		#region ClaseHija opposite domain role accessor
		
		/// <summary>
		/// Gets a list of ClaseHija.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Herencia.TargetClase
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Clase> ClaseHija
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Clase>, Clase>(global::UPM_IPS.MDFSJPGVSProyectoIPS.Herencia.TargetClaseDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Create link for path ClaseHasAtributo.Atributo
				this.Atributo.Add(sourceAtributo1);

				return;
			}
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion sourceOperacion2 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion;
			if (sourceOperacion2 != null)
			{
				// Create link for path ClaseHasOperaciones.Operaciones
				this.Operaciones.Add(sourceOperacion2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Atributo sourceAtributo1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Atributo;
			if (sourceAtributo1 != null)
			{
				// Delete link for path ClaseHasAtributo.Atributo
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.GetLinks((global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase)this, sourceAtributo1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.ClaseDomainRoleId, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion sourceOperacion2 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion;
			if (sourceOperacion2 != null)
			{
				// Delete link for path ClaseHasOperaciones.Operaciones
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.GetLinks((global::UPM_IPS.MDFSJPGVSProyectoIPS.Clase)this, sourceOperacion2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.ClaseDomainRoleId, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.OperacionDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass ClaseEnriquecida
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c8c4e87a-6e82-466b-a967-657910514657")]
	public partial class ClaseEnriquecida : Clase
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClaseEnriquecida domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc8c4e87a, 0x6e82, 0x466b, 0xa9, 0x67, 0x65, 0x79, 0x10, 0x51, 0x46, 0x57);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClaseEnriquecida(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region NombreCompletoE domain property code
		
		/// <summary>
		/// NombreCompletoE domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreCompletoEDomainPropertyId = new global::System.Guid(0xa160fcb8, 0xd5c4, 0x40e3, 0xa0, 0x22, 0xc5, 0xa9, 0x6d, 0x36, 0x6b, 0x12);
		
		/// <summary>
		/// Gets or sets the value of NombreCompletoE domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida.Nombre Completo E
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida/NombreCompletoE.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida/NombreCompletoE.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("a160fcb8-d5c4-40e3-a022-c5a96d366b12")]
		public global::System.String NombreCompletoE
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NombreCompletoEPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the ClaseEnriquecida.NombreCompletoE domain property.
		/// </summary>
		internal sealed partial class NombreCompletoEPropertyHandler : DslModeling::CalculatedPropertyValueHandler<ClaseEnriquecida, global::System.String>
		{
			private NombreCompletoEPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the ClaseEnriquecida.NombreCompletoE domain property value handler.
			/// </summary>
			public static readonly NombreCompletoEPropertyHandler Instance = new NombreCompletoEPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the ClaseEnriquecida.NombreCompletoE domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreCompletoEDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(ClaseEnriquecida element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NombreCompletoE because its Kind is
				// set to Calculated. Please provide the GetNombreCompletoEValue()
				// method on the domain class.
				return element.GetNombreCompletoEValue();
			}
		
		}
		
		#endregion
		#region EstiloOperacioned opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstiloOperacioned.
		/// Description for
		/// UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.ClaseEnriquecida
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstiloOperacion> EstiloOperacioned
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstiloOperacion>, EstiloOperacion>(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.ClaseEnriquecidaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion sourceEstiloOperacion1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion;
			if (sourceEstiloOperacion1 != null)
			{
				// Create link for path ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacioned
				this.EstiloOperacioned.Add(sourceEstiloOperacion1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion sourceEstiloOperacion1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion;
			if (sourceEstiloOperacion1 != null)
			{
				// Delete link for path ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacioned
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.GetLinks((global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecida)this, sourceEstiloOperacion1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.ClaseEnriquecidaDomainRoleId, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacionDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass EstiloOperacion
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("92d8d364-fc91-42ed-8d19-c108348dcfe4")]
	public partial class EstiloOperacion : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstiloOperacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x92d8d364, 0xfc91, 0x42ed, 0x8d, 0x19, 0xc1, 0x08, 0x34, 0x8d, 0xcf, 0xe4);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloOperacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloOperacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TipoLetra domain property code
		
		/// <summary>
		/// TipoLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoLetraDomainPropertyId = new global::System.Guid(0x8660a54b, 0xbe45, 0x4d5c, 0xbf, 0xf6, 0x73, 0x56, 0x9b, 0xe2, 0x36, 0x25);
		
		/// <summary>
		/// Storage for TipoLetra
		/// </summary>
		private TipoLetraEnum tipoLetraPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoLetra domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.Tipo Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/TipoLetra.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/TipoLetra.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8660a54b-be45-4d5c-bff6-73569be23625")]
		public TipoLetraEnum TipoLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstiloOperacion.TipoLetra domain property.
		/// </summary>
		internal sealed partial class TipoLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<EstiloOperacion, TipoLetraEnum>
		{
			private TipoLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloOperacion.TipoLetra domain property value handler.
			/// </summary>
			public static readonly TipoLetraPropertyHandler Instance = new TipoLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloOperacion.TipoLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoLetraEnum GetValue(EstiloOperacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstiloOperacion element, TipoLetraEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoLetraEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorLetra domain property code
		
		/// <summary>
		/// ColorLetra domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorLetraDomainPropertyId = new global::System.Guid(0xc0b075ff, 0x4ecf, 0x4b08, 0x8d, 0xa6, 0xf3, 0x7b, 0xaf, 0x64, 0x04, 0x98);
		
		/// <summary>
		/// Storage for ColorLetra
		/// </summary>
		private global::System.String colorLetraPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ColorLetra domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.Color Letra
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/ColorLetra.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/ColorLetra.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c0b075ff-4ecf-4b08-8da6-f37baf640498")]
		public global::System.String ColorLetra
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorLetraPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorLetraPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstiloOperacion.ColorLetra domain property.
		/// </summary>
		internal sealed partial class ColorLetraPropertyHandler : DslModeling::DomainPropertyValueHandler<EstiloOperacion, global::System.String>
		{
			private ColorLetraPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloOperacion.ColorLetra domain property value handler.
			/// </summary>
			public static readonly ColorLetraPropertyHandler Instance = new ColorLetraPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloOperacion.ColorLetra domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorLetraDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstiloOperacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorLetraPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstiloOperacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorLetraPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EstiloOpCompleto domain property code
		
		/// <summary>
		/// EstiloOpCompleto domain property Id.
		/// </summary>
		public static readonly global::System.Guid EstiloOpCompletoDomainPropertyId = new global::System.Guid(0x0a2c502b, 0xc687, 0x42bf, 0x86, 0x64, 0x10, 0x79, 0x95, 0x76, 0x9c, 0x7c);
		
		/// <summary>
		/// Gets or sets the value of EstiloOpCompleto domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion.Estilo Op Completo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/EstiloOpCompleto.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloOperacion/EstiloOpCompleto.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("0a2c502b-c687-42bf-8664-107995769c7c")]
		public global::System.String EstiloOpCompleto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return EstiloOpCompletoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the EstiloOperacion.EstiloOpCompleto domain property.
		/// </summary>
		internal sealed partial class EstiloOpCompletoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<EstiloOperacion, global::System.String>
		{
			private EstiloOpCompletoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloOperacion.EstiloOpCompleto domain property value handler.
			/// </summary>
			public static readonly EstiloOpCompletoPropertyHandler Instance = new EstiloOpCompletoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloOperacion.EstiloOpCompleto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EstiloOpCompletoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstiloOperacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for EstiloOpCompleto because its Kind is
				// set to Calculated. Please provide the GetEstiloOpCompletoValue()
				// method on the domain class.
				return element.GetEstiloOpCompletoValue();
			}
		
		}
		
		#endregion
		#region ClaseEnriquecida opposite domain role accessor
		/// <summary>
		/// Gets or sets ClaseEnriquecida.
		/// Description for
		/// UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacion
		/// </summary>
		public virtual ClaseEnriquecida ClaseEnriquecida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacionDomainRoleId) as ClaseEnriquecida;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseEnriquecidaHasEstiloOperacioned.EstiloOperacionDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass EstiloClase
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("76777a2a-1561-42ad-ad6a-cea1f72ce8c8")]
	public partial class EstiloClase : EstiloOperacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstiloClase domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x76777a2a, 0x1561, 0x42ad, 0xad, 0x6a, 0xce, 0xa1, 0xf7, 0x2c, 0xe8, 0xc8);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloClase(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloClase(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Alineacion domain property code
		
		/// <summary>
		/// Alineacion domain property Id.
		/// </summary>
		public static readonly global::System.Guid AlineacionDomainPropertyId = new global::System.Guid(0x8e72df23, 0xb269, 0x4fc0, 0xba, 0x27, 0xba, 0xc7, 0x84, 0x54, 0xce, 0x51);
		
		/// <summary>
		/// Storage for Alineacion
		/// </summary>
		private AlineacionEnum alineacionPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Alineacion domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase.Alineacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/Alineacion.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/Alineacion.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("8e72df23-b269-4fc0-ba27-bac78454ce51")]
		public AlineacionEnum Alineacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return alineacionPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				AlineacionPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstiloClase.Alineacion domain property.
		/// </summary>
		internal sealed partial class AlineacionPropertyHandler : DslModeling::DomainPropertyValueHandler<EstiloClase, AlineacionEnum>
		{
			private AlineacionPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloClase.Alineacion domain property value handler.
			/// </summary>
			public static readonly AlineacionPropertyHandler Instance = new AlineacionPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloClase.Alineacion domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return AlineacionDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed AlineacionEnum GetValue(EstiloClase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.alineacionPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstiloClase element, AlineacionEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				AlineacionEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.alineacionPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ColorFondo domain property code
		
		/// <summary>
		/// ColorFondo domain property Id.
		/// </summary>
		public static readonly global::System.Guid ColorFondoDomainPropertyId = new global::System.Guid(0xe97a2eb7, 0x4e46, 0x4df4, 0x93, 0xf3, 0x0d, 0x2f, 0x43, 0xed, 0x0a, 0xfe);
		
		/// <summary>
		/// Storage for ColorFondo
		/// </summary>
		private global::System.String colorFondoPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ColorFondo domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase.Color Fondo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/ColorFondo.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/ColorFondo.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("e97a2eb7-4e46-4df4-93f3-0d2f43ed0afe")]
		public global::System.String ColorFondo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return colorFondoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ColorFondoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstiloClase.ColorFondo domain property.
		/// </summary>
		internal sealed partial class ColorFondoPropertyHandler : DslModeling::DomainPropertyValueHandler<EstiloClase, global::System.String>
		{
			private ColorFondoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloClase.ColorFondo domain property value handler.
			/// </summary>
			public static readonly ColorFondoPropertyHandler Instance = new ColorFondoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloClase.ColorFondo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ColorFondoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstiloClase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.colorFondoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstiloClase element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.colorFondoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EstiloClCompleto domain property code
		
		/// <summary>
		/// EstiloClCompleto domain property Id.
		/// </summary>
		public static readonly global::System.Guid EstiloClCompletoDomainPropertyId = new global::System.Guid(0x34cb10d1, 0x4745, 0x4fab, 0xb4, 0xc7, 0xcb, 0xb6, 0xe3, 0x95, 0xfd, 0x05);
		
		/// <summary>
		/// Gets or sets the value of EstiloClCompleto domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase.Estilo Cl Completo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/EstiloClCompleto.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloClase/EstiloClCompleto.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("34cb10d1-4745-4fab-b4c7-cbb6e395fd05")]
		public global::System.String EstiloClCompleto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return EstiloClCompletoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the EstiloClase.EstiloClCompleto domain property.
		/// </summary>
		internal sealed partial class EstiloClCompletoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<EstiloClase, global::System.String>
		{
			private EstiloClCompletoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloClase.EstiloClCompleto domain property value handler.
			/// </summary>
			public static readonly EstiloClCompletoPropertyHandler Instance = new EstiloClCompletoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloClase.EstiloClCompleto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EstiloClCompletoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstiloClase element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for EstiloClCompleto because its Kind is
				// set to Calculated. Please provide the GetEstiloClCompletoValue()
				// method on the domain class.
				return element.GetEstiloClCompletoValue();
			}
		
		}
		
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass EstiloAtributo
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("5b96b876-c9fb-4867-a2e1-f057b3fefa7b")]
	public partial class EstiloAtributo : EstiloOperacion
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstiloAtributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5b96b876, 0xc9fb, 0x4867, 0xa2, 0xe1, 0xf0, 0x57, 0xb3, 0xfe, 0xfa, 0x7b);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloAtributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstiloAtributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Formato domain property code
		
		/// <summary>
		/// Formato domain property Id.
		/// </summary>
		public static readonly global::System.Guid FormatoDomainPropertyId = new global::System.Guid(0xc0f3ce87, 0x058d, 0x4fc4, 0x81, 0xac, 0x10, 0x26, 0x6e, 0x4d, 0x5b, 0x8f);
		
		/// <summary>
		/// Storage for Formato
		/// </summary>
		private FormatoEnum formatoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Formato domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo.Formato
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo/Formato.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo/Formato.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("c0f3ce87-058d-4fc4-81ac-10266e4d5b8f")]
		public FormatoEnum Formato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return formatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				FormatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the EstiloAtributo.Formato domain property.
		/// </summary>
		internal sealed partial class FormatoPropertyHandler : DslModeling::DomainPropertyValueHandler<EstiloAtributo, FormatoEnum>
		{
			private FormatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloAtributo.Formato domain property value handler.
			/// </summary>
			public static readonly FormatoPropertyHandler Instance = new FormatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloAtributo.Formato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return FormatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed FormatoEnum GetValue(EstiloAtributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.formatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(EstiloAtributo element, FormatoEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				FormatoEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.formatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EstiloAtCompleto domain property code
		
		/// <summary>
		/// EstiloAtCompleto domain property Id.
		/// </summary>
		public static readonly global::System.Guid EstiloAtCompletoDomainPropertyId = new global::System.Guid(0x830d7295, 0xf196, 0x47d4, 0xb0, 0x1f, 0x68, 0x85, 0x7d, 0x08, 0x47, 0x83);
		
		/// <summary>
		/// Gets or sets the value of EstiloAtCompleto domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo.Estilo At Completo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo/EstiloAtCompleto.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.EstiloAtributo/EstiloAtCompleto.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("830d7295-f196-47d4-b01f-68857d084783")]
		public global::System.String EstiloAtCompleto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return EstiloAtCompletoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the EstiloAtributo.EstiloAtCompleto domain property.
		/// </summary>
		internal sealed partial class EstiloAtCompletoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<EstiloAtributo, global::System.String>
		{
			private EstiloAtCompletoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the EstiloAtributo.EstiloAtCompleto domain property value handler.
			/// </summary>
			public static readonly EstiloAtCompletoPropertyHandler Instance = new EstiloAtCompletoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the EstiloAtributo.EstiloAtCompleto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EstiloAtCompletoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(EstiloAtributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for EstiloAtCompleto because its Kind is
				// set to Calculated. Please provide the GetEstiloAtCompletoValue()
				// method on the domain class.
				return element.GetEstiloAtCompletoValue();
			}
		
		}
		
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c1b3d44c-8aac-4b86-b5e9-290019ec840f")]
	public partial class Atributo : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc1b3d44c, 0x8aac, 0x4b86, 0xb5, 0xe9, 0x29, 0x00, 0x19, 0xec, 0x84, 0x0f);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Atributo(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x2d5b3090, 0xf524, 0x4aff, 0x81, 0x34, 0x37, 0xce, 0x55, 0xe2, 0xb0, 0xf6);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/Nombre.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/Nombre.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("2d5b3090-f524-4aff-8134-37ce55e2b0f6")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDato domain property code
		
		/// <summary>
		/// TipoDato domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatoDomainPropertyId = new global::System.Guid(0x94ea5b54, 0x10b1, 0x47ba, 0x93, 0x5b, 0x89, 0x55, 0x82, 0x5c, 0xee, 0x72);
		
		/// <summary>
		/// Storage for TipoDato
		/// </summary>
		private TipoDatoEnum tipoDatoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoDato domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.Tipo Dato
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/TipoDato.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/TipoDato.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("94ea5b54-10b1-47ba-935b-8955825cee72")]
		public TipoDatoEnum TipoDato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.TipoDato domain property.
		/// </summary>
		internal sealed partial class TipoDatoPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, TipoDatoEnum>
		{
			private TipoDatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.TipoDato domain property value handler.
			/// </summary>
			public static readonly TipoDatoPropertyHandler Instance = new TipoDatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.TipoDato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoDatoEnum GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, TipoDatoEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoDatoEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NameTipo domain property code
		
		/// <summary>
		/// NameTipo domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameTipoDomainPropertyId = new global::System.Guid(0x0b0d3398, 0x95ba, 0x4a63, 0xa7, 0x90, 0xeb, 0x29, 0xc0, 0x60, 0x10, 0x2b);
		
		/// <summary>
		/// Gets or sets the value of NameTipo domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.Name Tipo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/NameTipo.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/NameTipo.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("0b0d3398-95ba-4a63-a790-eb29c060102b")]
		public global::System.String NameTipo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NameTipoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.NameTipo domain property.
		/// </summary>
		internal sealed partial class NameTipoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Atributo, global::System.String>
		{
			private NameTipoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.NameTipo domain property value handler.
			/// </summary>
			public static readonly NameTipoPropertyHandler Instance = new NameTipoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.NameTipo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameTipoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NameTipo because its Kind is
				// set to Calculated. Please provide the GetNameTipoValue()
				// method on the domain class.
				return element.GetNameTipoValue();
			}
		
		}
		
		#endregion
		#region TipoPrivatePublicProtected domain property code
		
		/// <summary>
		/// TipoPrivatePublicProtected domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoPrivatePublicProtectedDomainPropertyId = new global::System.Guid(0x1e80dd64, 0x5fd5, 0x40e8, 0x86, 0x54, 0x0e, 0xd4, 0xb3, 0x71, 0x9a, 0xb0);
		
		/// <summary>
		/// Storage for TipoPrivatePublicProtected
		/// </summary>
		private TipoPrivatePublicProtected tipoPrivatePublicProtectedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoPrivatePublicProtected domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Atributo.Tipo Private Public
		/// Protected
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/TipoPrivatePublicProtected.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Atributo/TipoPrivatePublicProtected.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1e80dd64-5fd5-40e8-8654-0ed4b3719ab0")]
		public TipoPrivatePublicProtected TipoPrivatePublicProtected
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoPrivatePublicProtectedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoPrivatePublicProtectedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.TipoPrivatePublicProtected domain property.
		/// </summary>
		internal sealed partial class TipoPrivatePublicProtectedPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, TipoPrivatePublicProtected>
		{
			private TipoPrivatePublicProtectedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.TipoPrivatePublicProtected domain property value handler.
			/// </summary>
			public static readonly TipoPrivatePublicProtectedPropertyHandler Instance = new TipoPrivatePublicProtectedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.TipoPrivatePublicProtected domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoPrivatePublicProtectedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoPrivatePublicProtected GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoPrivatePublicProtectedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, TipoPrivatePublicProtected newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoPrivatePublicProtected oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoPrivatePublicProtectedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.Atributo
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasAtributo.AtributoDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass Operacion
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("de7b1758-c754-406a-bd57-1e094934d04c")]
	public partial class Operacion : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Operacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xde7b1758, 0xc754, 0x406a, 0xbd, 0x57, 0x1e, 0x09, 0x49, 0x34, 0xd0, 0x4c);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Operacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0x5704a784, 0xb7dc, 0x4bd3, 0xa0, 0xf2, 0xe8, 0x72, 0x32, 0x9f, 0xee, 0x4f);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/Nombre.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/Nombre.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("5704a784-b7dc-4bd3-a0f2-e872329fee4f")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ConjuntoDatos domain property code
		
		/// <summary>
		/// ConjuntoDatos domain property Id.
		/// </summary>
		public static readonly global::System.Guid ConjuntoDatosDomainPropertyId = new global::System.Guid(0xf52a5a30, 0x1226, 0x4814, 0x9e, 0x7c, 0xea, 0xe6, 0x98, 0xc6, 0x3c, 0x37);
		
		/// <summary>
		/// Storage for ConjuntoDatos
		/// </summary>
		private global::System.String conjuntoDatosPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of ConjuntoDatos domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Conjunto Datos
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/ConjuntoDatos.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/ConjuntoDatos.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f52a5a30-1226-4814-9e7c-eae698c63c37")]
		public global::System.String ConjuntoDatos
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return conjuntoDatosPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				ConjuntoDatosPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.ConjuntoDatos domain property.
		/// </summary>
		internal sealed partial class ConjuntoDatosPropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, global::System.String>
		{
			private ConjuntoDatosPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.ConjuntoDatos domain property value handler.
			/// </summary>
			public static readonly ConjuntoDatosPropertyHandler Instance = new ConjuntoDatosPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.ConjuntoDatos domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return ConjuntoDatosDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.conjuntoDatosPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.conjuntoDatosPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoPrivatePublicProtected domain property code
		
		/// <summary>
		/// TipoPrivatePublicProtected domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoPrivatePublicProtectedDomainPropertyId = new global::System.Guid(0x6ac2313e, 0x27be, 0x4892, 0x8c, 0x3c, 0x60, 0x2d, 0xa2, 0xda, 0x8f, 0x22);
		
		/// <summary>
		/// Storage for TipoPrivatePublicProtected
		/// </summary>
		private TipoPrivatePublicProtected tipoPrivatePublicProtectedPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoPrivatePublicProtected domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Tipo Private Public
		/// Protected
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/TipoPrivatePublicProtected.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/TipoPrivatePublicProtected.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6ac2313e-27be-4892-8c3c-602da2da8f22")]
		public TipoPrivatePublicProtected TipoPrivatePublicProtected
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoPrivatePublicProtectedPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoPrivatePublicProtectedPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.TipoPrivatePublicProtected domain property.
		/// </summary>
		internal sealed partial class TipoPrivatePublicProtectedPropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, TipoPrivatePublicProtected>
		{
			private TipoPrivatePublicProtectedPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.TipoPrivatePublicProtected domain property value handler.
			/// </summary>
			public static readonly TipoPrivatePublicProtectedPropertyHandler Instance = new TipoPrivatePublicProtectedPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.TipoPrivatePublicProtected domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoPrivatePublicProtectedDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoPrivatePublicProtected GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoPrivatePublicProtectedPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, TipoPrivatePublicProtected newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoPrivatePublicProtected oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoPrivatePublicProtectedPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NameTipo domain property code
		
		/// <summary>
		/// NameTipo domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameTipoDomainPropertyId = new global::System.Guid(0xc2bcdb4a, 0xf9d2, 0x4941, 0xab, 0x17, 0xac, 0x02, 0x6c, 0xad, 0x04, 0xb1);
		
		/// <summary>
		/// Gets or sets the value of NameTipo domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Name Tipo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/NameTipo.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/NameTipo.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("c2bcdb4a-f9d2-4941-ab17-ac026cad04b1")]
		public global::System.String NameTipo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NameTipoPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.NameTipo domain property.
		/// </summary>
		internal sealed partial class NameTipoPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Operacion, global::System.String>
		{
			private NameTipoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.NameTipo domain property value handler.
			/// </summary>
			public static readonly NameTipoPropertyHandler Instance = new NameTipoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.NameTipo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameTipoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NameTipo because its Kind is
				// set to Calculated. Please provide the GetNameTipoValue()
				// method on the domain class.
				return element.GetNameTipoValue();
			}
		
		}
		
		#endregion
		#region TipoDato domain property code
		
		/// <summary>
		/// TipoDato domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatoDomainPropertyId = new global::System.Guid(0x02290e23, 0x2159, 0x4a0e, 0xbe, 0xe2, 0x21, 0xcf, 0x37, 0xbd, 0x18, 0xcf);
		
		/// <summary>
		/// Storage for TipoDato
		/// </summary>
		private TipoDatoEnum tipoDatoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoDato domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Operacion.Tipo Dato
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/TipoDato.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Operacion/TipoDato.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("02290e23-2159-4a0e-bee2-21cf37bd18cf")]
		public TipoDatoEnum TipoDato
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Operacion.TipoDato domain property.
		/// </summary>
		internal sealed partial class TipoDatoPropertyHandler : DslModeling::DomainPropertyValueHandler<Operacion, TipoDatoEnum>
		{
			private TipoDatoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Operacion.TipoDato domain property value handler.
			/// </summary>
			public static readonly TipoDatoPropertyHandler Instance = new TipoDatoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Operacion.TipoDato domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoDatoEnum GetValue(Operacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Operacion element, TipoDatoEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoDatoEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Clase opposite domain role accessor
		/// <summary>
		/// Gets or sets Clase.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.Operacion
		/// </summary>
		public virtual Clase Clase
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.OperacionDomainRoleId) as Clase;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.ClaseHasOperaciones.OperacionDomainRoleId, value);
			}
		}
		#endregion
		#region Parametros opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Parametros.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.Operacion
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Parametro> Parametros
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Parametro>, Parametro>(global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.OperacionDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Parametro sourceParametro1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Parametro;
			if (sourceParametro1 != null)
			{
				// Create link for path OperacionHasParametros.Parametros
				this.Parametros.Add(sourceParametro1);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.MDFSJPGVSProyectoIPS.Parametro sourceParametro1 = sourceElement as global::UPM_IPS.MDFSJPGVSProyectoIPS.Parametro;
			if (sourceParametro1 != null)
			{
				// Delete link for path OperacionHasParametros.Parametros
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.GetLinks((global::UPM_IPS.MDFSJPGVSProyectoIPS.Operacion)this, sourceParametro1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.OperacionDomainRoleId, global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.ParametroDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.MDFSJPGVSProyectoIPS
{
	/// <summary>
	/// DomainClass Parametro
	/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Parametro
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c9569abc-fc2d-4f2c-943b-27caef55dd0d")]
	public partial class Parametro : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Parametro domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc9569abc, 0xfc2d, 0x4f2c, 0x94, 0x3b, 0x27, 0xca, 0xef, 0x55, 0xdd, 0x0d);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Parametro(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TipoEntradaSalida domain property code
		
		/// <summary>
		/// TipoEntradaSalida domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoEntradaSalidaDomainPropertyId = new global::System.Guid(0xeecf0b7f, 0x6851, 0x4b60, 0x8a, 0x18, 0x89, 0x5d, 0x06, 0x50, 0x22, 0x0f);
		
		/// <summary>
		/// Storage for TipoEntradaSalida
		/// </summary>
		private TipoEntradaSalidaEnum tipoEntradaSalidaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoEntradaSalida domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.Tipo Entrada Salida
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/TipoEntradaSalida.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/TipoEntradaSalida.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("eecf0b7f-6851-4b60-8a18-895d0650220f")]
		public TipoEntradaSalidaEnum TipoEntradaSalida
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoEntradaSalidaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoEntradaSalidaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.TipoEntradaSalida domain property.
		/// </summary>
		internal sealed partial class TipoEntradaSalidaPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, TipoEntradaSalidaEnum>
		{
			private TipoEntradaSalidaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.TipoEntradaSalida domain property value handler.
			/// </summary>
			public static readonly TipoEntradaSalidaPropertyHandler Instance = new TipoEntradaSalidaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.TipoEntradaSalida domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoEntradaSalidaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoEntradaSalidaEnum GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoEntradaSalidaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, TipoEntradaSalidaEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoEntradaSalidaEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoEntradaSalidaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Nombre domain property code
		
		/// <summary>
		/// Nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreDomainPropertyId = new global::System.Guid(0xf7319e4c, 0x04f5, 0x4307, 0xb2, 0xb6, 0x44, 0xd0, 0xc8, 0xda, 0x70, 0xe5);
		
		/// <summary>
		/// Storage for Nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Nombre domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/Nombre.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/Nombre.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f7319e4c-04f5-4307-b2b6-44d0c8da70e5")]
		public global::System.String Nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.Nombre domain property.
		/// </summary>
		internal sealed partial class NombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, global::System.String>
		{
			private NombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.Nombre domain property value handler.
			/// </summary>
			public static readonly NombrePropertyHandler Instance = new NombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.Nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TipoDatoParametro domain property code
		
		/// <summary>
		/// TipoDatoParametro domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDatoParametroDomainPropertyId = new global::System.Guid(0x6e8c3b5a, 0x0a41, 0x48c6, 0xa2, 0x9a, 0xa6, 0xf1, 0xb9, 0x01, 0x07, 0x66);
		
		/// <summary>
		/// Storage for TipoDatoParametro
		/// </summary>
		private TipoDatoEnum tipoDatoParametroPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of TipoDatoParametro domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.Tipo Dato Parametro
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/TipoDatoParametro.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/TipoDatoParametro.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6e8c3b5a-0a41-48c6-a29a-a6f1b9010766")]
		public TipoDatoEnum TipoDatoParametro
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoDatoParametroPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoDatoParametroPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.TipoDatoParametro domain property.
		/// </summary>
		internal sealed partial class TipoDatoParametroPropertyHandler : DslModeling::DomainPropertyValueHandler<Parametro, TipoDatoEnum>
		{
			private TipoDatoParametroPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.TipoDatoParametro domain property value handler.
			/// </summary>
			public static readonly TipoDatoParametroPropertyHandler Instance = new TipoDatoParametroPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.TipoDatoParametro domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDatoParametroDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoDatoEnum GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoDatoParametroPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Parametro element, TipoDatoEnum newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoDatoEnum oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoDatoParametroPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region NombreCompletoP domain property code
		
		/// <summary>
		/// NombreCompletoP domain property Id.
		/// </summary>
		public static readonly global::System.Guid NombreCompletoPDomainPropertyId = new global::System.Guid(0xa9423eff, 0xcd92, 0x47b8, 0x8f, 0x78, 0x50, 0x1d, 0x56, 0x8d, 0xaf, 0xcc);
		
		/// <summary>
		/// Gets or sets the value of NombreCompletoP domain property.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.Parametro.Nombre Completo P
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/NombreCompletoP.DisplayName", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.MDFSJPGVSProyectoIPS.Parametro/NombreCompletoP.Description", typeof(global::UPM_IPS.MDFSJPGVSProyectoIPS.MDFSJPGVSProyectoIPSDomainModel), "UPM_IPS.MDFSJPGVSProyectoIPS.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.ReadOnly(true)]
		[DslModeling::DomainProperty(Kind = DslModeling::DomainPropertyKind.Calculated)]
		[DslModeling::DomainObjectId("a9423eff-cd92-47b8-8f78-501d568dafcc")]
		public global::System.String NombreCompletoP
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return NombreCompletoPPropertyHandler.Instance.GetValue(this);
			}
		}
		/// <summary>
		/// Value handler for the Parametro.NombreCompletoP domain property.
		/// </summary>
		internal sealed partial class NombreCompletoPPropertyHandler : DslModeling::CalculatedPropertyValueHandler<Parametro, global::System.String>
		{
			private NombreCompletoPPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Parametro.NombreCompletoP domain property value handler.
			/// </summary>
			public static readonly NombreCompletoPPropertyHandler Instance = new NombreCompletoPPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Parametro.NombreCompletoP domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NombreCompletoPDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Parametro element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				// There is no storage for NombreCompletoP because its Kind is
				// set to Calculated. Please provide the GetNombreCompletoPValue()
				// method on the domain class.
				return element.GetNombreCompletoPValue();
			}
		
		}
		
		#endregion
		#region Operacion opposite domain role accessor
		/// <summary>
		/// Gets or sets Operacion.
		/// Description for UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.Parametro
		/// </summary>
		public virtual Operacion Operacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.ParametroDomainRoleId) as Operacion;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.MDFSJPGVSProyectoIPS.OperacionHasParametros.ParametroDomainRoleId, value);
			}
		}
		#endregion
	}
}
